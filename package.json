{
  "name": "schildichat-desktop",
  "productName": "SchildiChat",
  "main": "src/electron-main.js",
  "version": "1.7.30-sc1",
  "description": "A Matrix Client based on Element with a more traditional instant messaging experience",
  "author": "SchildiChat",
  "repository": {
    "type": "git",
    "url": "https://github.com/SchildiChat/element-desktop"
  },
  "homepage": "https://schildi.chat/",
  "license": "Apache-2.0",
  "files": [],
  "scripts": {
    "i18n": "matrix-gen-i18n",
    "prunei18n": "matrix-prune-i18n",
    "diff-i18n": "cp src/i18n/strings/en_EN.json src/i18n/strings/en_EN_orig.json && matrix-gen-i18n && matrix-compare-i18n-files src/i18n/strings/en_EN_orig.json src/i18n/strings/en_EN.json",
    "mkdirs": "mkdirp packages deploys",
    "fetch": "yarn run mkdirs && node scripts/fetch-package.js",
    "asar-webapp": "asar p webapp webapp.asar",
    "start": "electron .",
    "lint": "eslint src/ scripts/ hak/",
    "build:native": "yarn run hak",
    "build32": "electron-builder --ia32",
    "build64": "electron-builder --x64",
    "build": "electron-builder",
    "build32linux": "electron-builder --ia32 --linux deb pacman tar.xz",
    "build64linux": "electron-builder --x64 --linux deb pacman tar.xz",
    "build64pacman": "electron-builder --x64 --linux pacman",
    "build64deb": "electron-builder --x64 --linux deb",
    "build64appimage": "electron-builder --x64 --linux AppImage",
    "build32windows": "electron-builder --ia32 --windows nsis",
    "build64windows": "electron-builder --x64 --windows nsis",
    "build64windows-portable": "electron-builder --x64 --windows portable",
    "docker:setup": "docker build -t element-desktop-dockerbuild dockerbuild",
    "docker:build:native": "scripts/in-docker.sh yarn run hak",
    "docker:build": "scripts/in-docker.sh yarn run build",
    "docker:install": "scripts/in-docker.sh yarn install",
    "debrepo": "scripts/mkrepo.sh",
    "clean": "rimraf webapp.asar dist packages deploys",
    "hak": "node scripts/hak/index.js"
  },
  "dependencies": {
    "auto-launch": "^5.0.5",
    "counterpart": "^0.18.6",
    "electron-store": "^6.0.1",
    "electron-window-state": "^5.0.3",
    "minimist": "^1.2.3",
    "png-to-ico": "^2.1.1",
    "request": "^2.88.2"
  },
  "devDependencies": {
    "asar": "^2.0.1",
    "electron-builder": "22.10.5",
    "electron-builder-squirrel-windows": "22.10.5",
    "electron-devtools-installer": "^3.1.1",
    "electron-notarize": "^1.0.0",
    "eslint": "7.18.0",
    "eslint-config-google": "^0.14.0",
    "eslint-plugin-matrix-org": "github:matrix-org/eslint-plugin-matrix-org#main",
    "find-npm-prefix": "^1.0.2",
    "fs-extra": "^8.1.0",
    "glob": "^7.1.6",
    "matrix-web-i18n": "github:matrix-org/matrix-web-i18n",
    "mkdirp": "^1.0.3",
    "needle": "^2.5.0",
    "node-pre-gyp": "^0.15.0",
    "npm": "^6.14.11",
    "rimraf": "^3.0.2",
    "semver": "^7.3.4",
    "tar": "^6.1.0"
  },
  "hakDependencies": {
    "matrix-seshat": "^2.2.3",
    "keytar": "^5.6.0"
  },
  "build": {
    "appId": "chat.schildi.desktop",
    "electronVersion": "12.0.9",
    "files": [
      "package.json",
      {
        "from": ".hak/hakModules",
        "to": "node_modules"
      },
      "src/**"
    ],
    "extraResources": [
      {
        "from": "res/img",
        "to": "img"
      },
      "webapp.asar"
    ],
    "linux": {
      "target": "deb",
      "category": "Network;InstantMessaging;Chat;VideoConference",
      "maintainer": "codeworks@supercable.onl",
      "desktop": {
        "StartupWMClass": "schildichat"
      }
    },
    "deb": {
      "depends": ["libgtk-3-0", "libnotify4", "libnss3", "libxss1", "libxtst6", "xdg-utils", "libatspi2.0-0", "libuuid1", "libsecret-1-0", "libsqlcipher0"],
      "packageCategory": "net",
      "priority": "extra"
    },
    "mac": {
      "category": "public.app-category.social-networking",
      "darkModeSupport": true
    },
    "win": {
      "target": {
        "target": "squirrel"
      },
      "sign": "scripts/electron_winSign"
    },
    "directories": {
      "output": "dist"
    },
    "afterPack": "scripts/electron_afterPack",
    "afterSign": "scripts/electron_afterSign",
    "protocols": [
      {
        "name": "element",
        "schemes": [
          "element"
        ]
      }
    ]
  }
}
